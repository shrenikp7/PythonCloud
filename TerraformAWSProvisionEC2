Terraform code to provision EC2 instance in AWS

# Configure the AWS provider
provider "aws" {
  region = "us-west-2"
}

# Create a VPC
resource "aws_vpc" "example" {
  cidr_block           = "10.0.0.0/16"
  enable_dns_hostnames = true
}

# Create a VPN subnet
resource "aws_subnet" "vpn_subnet" {
  vpc_id            = aws_vpc.example.id
  cidr_block        = "10.0.1.0/24"
  availability_zone = "us-west-2a"
}

# Create an Internet Gateway
resource "aws_internet_gateway" "example" {
  vpc_id = aws_vpc.example.id
}

# Create a Route Table
resource "aws_route_table" "example" {
  vpc_id = aws_vpc.example.id
}

# Associate the Route Table with the VPN subnet
resource "aws_route_table_association" "example" {
  subnet_id      = aws_subnet.vpn_subnet.id
  route_table_id = aws_route_table.example.id
}

# Create a route to the Internet Gateway
resource "aws_route" "example" {
  route_table_id         = aws_route_table.example.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = aws_internet_gateway.example.id
}

# Create a security group
resource "aws_security_group" "example" {
  name        = "example-security-group"
  description = "Example security group"

  vpc_id = aws_vpc.example.id

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Create an EC2 instance
resource "aws_instance" "example" {
  ami           = "ami-0c94855ba95c71c99"
  instance_type = "t2.micro"
  key_name      = "your_key_pair_name"
  subnet_id     = aws_subnet.vpn_subnet.id
  vpc_security_group_ids = [aws_security_group.example.id]

  tags = {
    Name = "ExampleInstance"
  }
}
